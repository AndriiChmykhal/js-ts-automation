{
	"info": {
		"_postman_id": "0fd2cfd9-b001-49e0-bb2e-1957989d23b1",
		"name": "Cat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36273938"
	},
	"item": [
		{
			"name": "/images/search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"pm.environment.set(\"image_id\", jsonData[0].id);",
							"",
							"pm.test(\"Response contains at least one image\", function () {",
							"    let jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData).to.be.an(\"array\").that.is.not.empty;",
							"",
							"    pm.test(\"First image object has ID and URL\", function () {",
							"        pm.expect(jsonData[0]).to.have.property(\"id\").that.is.a(\"string\");",
							"        pm.expect(jsonData[0]).to.have.property(\"url\").that.is.a(\"string\");",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/images/search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"images",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 201 Created\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Vote was successfully registered\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"message\", \"SUCCESS\");",
							"});",
							"",
							"pm.test(\"Response contains a vote ID\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\").that.is.a(\"number\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"image_id\":\"{{image_id}}\",\n    \"sub_id\":\"optional unique id of your user\",\n    \"value\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/votes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"votes"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favourites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Image was successfully added to favourites\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"message\", \"SUCCESS\");",
							"});",
							"",
							"pm.test(\"Response contains a favourite ID\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\").that.is.a(\"number\");",
							"    pm.environment.set(\"favourite_id\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"image_id\": \"{{image_id}}\",\n    \"sub_id\": \"test_user\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/favourites",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"favourites"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favourites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains at least one favourite item\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\").that.is.not.empty;",
							"});",
							"",
							"pm.test(\"Stored favourite_id exists in the response\", function () {",
							"    let jsonData = pm.response.json();",
							"    let storedId = pm.environment.get(\"favourite_id\");",
							"    let found = jsonData.some(fav => fav.id == storedId);",
							"    pm.expect(found).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/favourites",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"favourites"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favourites/favourite_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Favourite was successfully deleted\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"message\", \"SUCCESS\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/favourites/{{favourite_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"favourites",
						"{{favourite_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favourites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted favourite is no longer in the list\", function () {",
							"    let jsonData = pm.response.json();",
							"    let storedId = pm.environment.get(\"favourite_id\");",
							"    let found = jsonData.some(fav => fav.id == storedId);",
							"    pm.expect(found).to.be.false;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/favourites",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"favourites"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://api.thecatapi.com/v1",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "live_fNUvC1lm7oqI2pRqSlM9FcjMcMy2NqQpBjXjtABCczVvM4jwIlbUVbbPVbdZUABd",
			"type": "string"
		},
		{
			"key": "favourite_id",
			"value": "",
			"type": "string"
		}
	]
}
